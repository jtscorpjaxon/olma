<?php

namespace common\models;

use Yii;
use yii\base\Exception;
/**
 * This is the model class for table "olmalar".
 *
 * @property int $id
 * @property string $rang
 * @property int $unib
 * @property int $uzilish
 * @property string $holati
 * @property int $yeyilgani
 * @property int $sana
 */
class Olmalar extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    static $statusArr=[
        'Daraxtda'=>'Daraxtda turibdi',
        'tushdi'=>'Yerda yotibdi',
        'chirigan'=>'Chirigan olma',
    ];

    public function __construct($rang=false) {
        if($rang) $this->rang=$rang;
        parent::__construct();
    }

    public static function tableName()
    {
        return 'olmalar';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [

            [['unib', 'uzilish'], 'integer'],
            [['holati'], 'in','range'=>['Daraxtda','tushdi','chirigan']],
            [['yeyilgani'], 'number'],
            [['rang'], 'string', 'max' => 25],

            //Default Values
            ['holati', 'default','value'=>'Daraxtda'],
            ['yeyilgani', 'default','value'=>1.00],
            ['unib', 'default','value'=>mt_rand(1, time())],
            ['rang', 'default','value'=>sprintf('#%06X', mt_rand(0, 0xFFFFFF))],

            /* [['id', 'rang', 'unib', 'uzilish', 'yeyilgani', 'sana'], 'required'],
             [['id', 'unib', 'uzilish', 'yeyilgani', 'sana'], 'integer'],
             [['holati'], 'string'],
             [['rang'], 'string', 'max' => 25],
             [['id'], 'unique'],*/
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function beforeSave($insert)
    {
        if($this->holati=="tushdi"){
            $this->uzilish=time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        if($this->holati=="tushdi" && time()-$this->uzilish>5*3600){
            $this->holati="chirigan";
        }
        parent::afterFind();
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'rang' => 'Rang',
            'unib' => 'Unib',
            'uzilish' => 'Uzilish',
            'holati' => 'Holati',
            'yeyilgani' => 'Yeyilgani',
            'sana' => 'Sana',
        ];
    }
    function eat(int $percent){
        if($percent>100) {
            throw new Exception('100% dan yuqori kiritilgan');
        } elseif($percent<0) {
            throw new Exception('0% dan past kiritilgan');
        } elseif(!$this->canEat()){
            throw new Exception('Daraxtda turganda yoki chirigan bo\'lsa yeb bo\'lmaydi');
        }
        $newSize=$percent/100;
        if($newSize>$this->yeyilgani){
            $this->yeyilgani=0.00;
        } else {
            $this->yeyilgani -= $percent / 100;
        }
    }

    /**
     * Check abot eating apple
     *
     * @return bool
     */
    function canEat(){
        if($this->holati=="Daraxtda" || $this->holati=="chirigan"){
            return false;
        } else {
            return true;
        }
    }
    /**
     * Function for fall To Ground
     *
     * @return void
     */
    function fallToGround(){
        $this->holati="tushdi";
    }
}
